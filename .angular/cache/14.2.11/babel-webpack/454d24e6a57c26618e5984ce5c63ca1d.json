{"ast":null,"code":"import { isBigNumber, isCollection, isNumber } from '../../../utils/is.js';\n/**\n * Change last argument dim from one-based to zero-based.\n */\n\nexport function lastDimToZeroBase(args) {\n  if (args.length === 2 && isCollection(args[0])) {\n    args = args.slice();\n    var dim = args[1];\n\n    if (isNumber(dim)) {\n      args[1] = dim - 1;\n    } else if (isBigNumber(dim)) {\n      args[1] = dim.minus(1);\n    }\n  }\n\n  return args;\n}","map":{"version":3,"names":["isBigNumber","isCollection","isNumber","lastDimToZeroBase","args","length","slice","dim","minus"],"sources":["C:/Users/lenovo/node_modules/mathjs/lib/esm/expression/transform/utils/lastDimToZeroBase.js"],"sourcesContent":["import { isBigNumber, isCollection, isNumber } from '../../../utils/is.js';\n\n/**\n * Change last argument dim from one-based to zero-based.\n */\nexport function lastDimToZeroBase(args) {\n  if (args.length === 2 && isCollection(args[0])) {\n    args = args.slice();\n    var dim = args[1];\n    if (isNumber(dim)) {\n      args[1] = dim - 1;\n    } else if (isBigNumber(dim)) {\n      args[1] = dim.minus(1);\n    }\n  }\n  return args;\n}"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,YAAtB,EAAoCC,QAApC,QAAoD,sBAApD;AAEA;AACA;AACA;;AACA,OAAO,SAASC,iBAAT,CAA2BC,IAA3B,EAAiC;EACtC,IAAIA,IAAI,CAACC,MAAL,KAAgB,CAAhB,IAAqBJ,YAAY,CAACG,IAAI,CAAC,CAAD,CAAL,CAArC,EAAgD;IAC9CA,IAAI,GAAGA,IAAI,CAACE,KAAL,EAAP;IACA,IAAIC,GAAG,GAAGH,IAAI,CAAC,CAAD,CAAd;;IACA,IAAIF,QAAQ,CAACK,GAAD,CAAZ,EAAmB;MACjBH,IAAI,CAAC,CAAD,CAAJ,GAAUG,GAAG,GAAG,CAAhB;IACD,CAFD,MAEO,IAAIP,WAAW,CAACO,GAAD,CAAf,EAAsB;MAC3BH,IAAI,CAAC,CAAD,CAAJ,GAAUG,GAAG,CAACC,KAAJ,CAAU,CAAV,CAAV;IACD;EACF;;EACD,OAAOJ,IAAP;AACD"},"metadata":{},"sourceType":"module"}