{"ast":null,"code":"import Decimal from 'decimal.js';\nimport { factory } from '../../utils/factory.js';\nvar name = 'BigNumber';\nvar dependencies = ['?on', 'config'];\nexport var createBigNumberClass = /* #__PURE__ */factory(name, dependencies, _ref => {\n  var {\n    on,\n    config\n  } = _ref;\n  var BigNumber = Decimal.clone({\n    precision: config.precision,\n    modulo: Decimal.EUCLID\n  });\n  BigNumber.prototype = Object.create(BigNumber.prototype);\n  /**\n   * Attach type information\n   */\n\n  BigNumber.prototype.type = 'BigNumber';\n  BigNumber.prototype.isBigNumber = true;\n  /**\n   * Get a JSON representation of a BigNumber containing\n   * type information\n   * @returns {Object} Returns a JSON object structured as:\n   *                   `{\"mathjs\": \"BigNumber\", \"value\": \"0.2\"}`\n   */\n\n  BigNumber.prototype.toJSON = function () {\n    return {\n      mathjs: 'BigNumber',\n      value: this.toString()\n    };\n  };\n  /**\n   * Instantiate a BigNumber from a JSON object\n   * @param {Object} json  a JSON object structured as:\n   *                       `{\"mathjs\": \"BigNumber\", \"value\": \"0.2\"}`\n   * @return {BigNumber}\n   */\n\n\n  BigNumber.fromJSON = function (json) {\n    return new BigNumber(json.value);\n  };\n\n  if (on) {\n    // listen for changed in the configuration, automatically apply changed precision\n    on('config', function (curr, prev) {\n      if (curr.precision !== prev.precision) {\n        BigNumber.config({\n          precision: curr.precision\n        });\n      }\n    });\n  }\n\n  return BigNumber;\n}, {\n  isClass: true\n});","map":{"version":3,"names":["Decimal","factory","name","dependencies","createBigNumberClass","_ref","on","config","BigNumber","clone","precision","modulo","EUCLID","prototype","Object","create","type","isBigNumber","toJSON","mathjs","value","toString","fromJSON","json","curr","prev","isClass"],"sources":["C:/Users/lenovo/node_modules/mathjs/lib/esm/type/bignumber/BigNumber.js"],"sourcesContent":["import Decimal from 'decimal.js';\nimport { factory } from '../../utils/factory.js';\nvar name = 'BigNumber';\nvar dependencies = ['?on', 'config'];\nexport var createBigNumberClass = /* #__PURE__ */factory(name, dependencies, _ref => {\n  var {\n    on,\n    config\n  } = _ref;\n  var BigNumber = Decimal.clone({\n    precision: config.precision,\n    modulo: Decimal.EUCLID\n  });\n  BigNumber.prototype = Object.create(BigNumber.prototype);\n\n  /**\n   * Attach type information\n   */\n  BigNumber.prototype.type = 'BigNumber';\n  BigNumber.prototype.isBigNumber = true;\n\n  /**\n   * Get a JSON representation of a BigNumber containing\n   * type information\n   * @returns {Object} Returns a JSON object structured as:\n   *                   `{\"mathjs\": \"BigNumber\", \"value\": \"0.2\"}`\n   */\n  BigNumber.prototype.toJSON = function () {\n    return {\n      mathjs: 'BigNumber',\n      value: this.toString()\n    };\n  };\n\n  /**\n   * Instantiate a BigNumber from a JSON object\n   * @param {Object} json  a JSON object structured as:\n   *                       `{\"mathjs\": \"BigNumber\", \"value\": \"0.2\"}`\n   * @return {BigNumber}\n   */\n  BigNumber.fromJSON = function (json) {\n    return new BigNumber(json.value);\n  };\n  if (on) {\n    // listen for changed in the configuration, automatically apply changed precision\n    on('config', function (curr, prev) {\n      if (curr.precision !== prev.precision) {\n        BigNumber.config({\n          precision: curr.precision\n        });\n      }\n    });\n  }\n  return BigNumber;\n}, {\n  isClass: true\n});"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,YAApB;AACA,SAASC,OAAT,QAAwB,wBAAxB;AACA,IAAIC,IAAI,GAAG,WAAX;AACA,IAAIC,YAAY,GAAG,CAAC,KAAD,EAAQ,QAAR,CAAnB;AACA,OAAO,IAAIC,oBAAoB,GAAG,eAAeH,OAAO,CAACC,IAAD,EAAOC,YAAP,EAAqBE,IAAI,IAAI;EACnF,IAAI;IACFC,EADE;IAEFC;EAFE,IAGAF,IAHJ;EAIA,IAAIG,SAAS,GAAGR,OAAO,CAACS,KAAR,CAAc;IAC5BC,SAAS,EAAEH,MAAM,CAACG,SADU;IAE5BC,MAAM,EAAEX,OAAO,CAACY;EAFY,CAAd,CAAhB;EAIAJ,SAAS,CAACK,SAAV,GAAsBC,MAAM,CAACC,MAAP,CAAcP,SAAS,CAACK,SAAxB,CAAtB;EAEA;AACF;AACA;;EACEL,SAAS,CAACK,SAAV,CAAoBG,IAApB,GAA2B,WAA3B;EACAR,SAAS,CAACK,SAAV,CAAoBI,WAApB,GAAkC,IAAlC;EAEA;AACF;AACA;AACA;AACA;AACA;;EACET,SAAS,CAACK,SAAV,CAAoBK,MAApB,GAA6B,YAAY;IACvC,OAAO;MACLC,MAAM,EAAE,WADH;MAELC,KAAK,EAAE,KAAKC,QAAL;IAFF,CAAP;EAID,CALD;EAOA;AACF;AACA;AACA;AACA;AACA;;;EACEb,SAAS,CAACc,QAAV,GAAqB,UAAUC,IAAV,EAAgB;IACnC,OAAO,IAAIf,SAAJ,CAAce,IAAI,CAACH,KAAnB,CAAP;EACD,CAFD;;EAGA,IAAId,EAAJ,EAAQ;IACN;IACAA,EAAE,CAAC,QAAD,EAAW,UAAUkB,IAAV,EAAgBC,IAAhB,EAAsB;MACjC,IAAID,IAAI,CAACd,SAAL,KAAmBe,IAAI,CAACf,SAA5B,EAAuC;QACrCF,SAAS,CAACD,MAAV,CAAiB;UACfG,SAAS,EAAEc,IAAI,CAACd;QADD,CAAjB;MAGD;IACF,CANC,CAAF;EAOD;;EACD,OAAOF,SAAP;AACD,CAlDuD,EAkDrD;EACDkB,OAAO,EAAE;AADR,CAlDqD,CAAjD"},"metadata":{},"sourceType":"module"}